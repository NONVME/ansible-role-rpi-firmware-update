---
# - name: Configure options in /boot/firmware/config.txt.
#   lineinfile:
#     dest: /boot/firmware/config.txt
#     regexp: "{{ item.regexp }}"
#     line: "{{ item.line }}"
#     insertafter: EOF
#     state: present
#   with_items: "{{ raspberry_pi_boot_config_options }}"
#   notify: Reboot the machine

- name: Set dtoverlay parameter to vc4-fkms-v3d
  ansible.builtin.replace:
    path: /boot/firmware/config.txt
    regexp: '(dtoverlay=).*'
    replace: '\1vc4-fkms-v3d'
    # backup: yes
  notify: Reboot the machine

- name: Configure options in /etc/rc.local.
  lineinfile:
    dest: /etc/rc.local
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    insertbefore: "^exit"
    state: present
  with_items: "{{ raspberry_pi_rc_local_options }}"

- name: ubuntu | upgrade
  ansible.builtin.apt:
    upgrade: full
    update_cache: true
    cache_valid_time: 3600
    autoclean: true
    autoremove: true
  register: apt_upgrade
  retries: 5
  until: apt_upgrade is success

- name: Install rpi-eeprom
  apt:
    name: rpi-eeprom
    state: present

- name: Update Raspberry Pi EEPROM
  ansible.builtin.command:
    cmd: rpi-eeprom-update -a
    become: yes
  register: update_result
  changed_when: "update_result.rc == 0 and 'already up-to-date' not in update_result.stdout"
  failed_when: "update_result.rc != 0 and 'already up-to-date' not in update_result.stdout"
  notify: Reboot the machine
